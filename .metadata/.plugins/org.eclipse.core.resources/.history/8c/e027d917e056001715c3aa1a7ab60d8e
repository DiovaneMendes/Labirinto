
package applications;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.Random;
import java.util.Scanner;

import javax.swing.JOptionPane;

import com.senac.SimpleJava.Console;
import com.senac.SimpleJava.Graphics.Canvas;
import com.senac.SimpleJava.Graphics.Color;
import com.senac.SimpleJava.Graphics.GraphicApplication;
import com.senac.SimpleJava.Graphics.Point;
import com.senac.SimpleJava.Graphics.Resolution;
import com.senac.SimpleJava.Graphics.Sprite;
import com.senac.SimpleJava.Graphics.events.MouseEvent;
import com.senac.SimpleJava.Graphics.events.MouseObserver;

public class Principal
	extends GraphicApplication // Para aplicacoes graficas com SimpleJava
	implements MouseObserver // Para responder a eventos de mouse na propria applicacao
	{
	private Porta porta;
	private Personagem personagem;
	private Inimigo inimigo;
	private Sala sala[] = new Sala [32];
	private Random gerador = new Random();
	private int numeroAleatorio = gerador.nextInt(31);
	private int qualInimigo = gerador.nextInt(4); 
	
	//==============================CLICK===================================
	@Override
	public void notify(MouseEvent event, int button, Point point) {
		if (event == MouseEvent.CLICK){
			//north
			if(sala[numeroAleatorio].north != null && 
				porta.northX+10 > point.x && porta.northX < point.x+1 &&
				porta.northY+2 > point.y && porta.northY < point.y+2){
					numeroAleatorio = sala[numeroAleatorio].clickNorth;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
			//south
			if(sala[numeroAleatorio].south != null && 
				porta.southX+10 > point.x && porta.southX < point.x+1 &&
				porta.southY+2 > point.y && porta.southY < point.y+2){ 
					numeroAleatorio = sala[numeroAleatorio].clickSouth;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
			//east
			if(sala[numeroAleatorio].east != null && 
				porta.eastX+2 > point.x && porta.eastX < point.x+2 &&
				porta.eastY+10 > point.y && porta.eastY < point.y+1){ 
					numeroAleatorio = sala[numeroAleatorio].clickEast;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
			//west
			if(sala[numeroAleatorio].west != null && 
				porta.westX+2 > point.x && porta.westX < point.x+2 &&
				porta.westY+10 > point.y && porta.westY < point.y+1){ 
					numeroAleatorio = sala[numeroAleatorio].clickWest;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
			//up
			if(sala[numeroAleatorio].up != null && 
				porta.upX+10 > point.x && porta.upX < point.x+1 &&
				porta.upY+2 > point.y && porta.upY < point.y+2){
					numeroAleatorio = sala[numeroAleatorio].clickUp;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
			//down
			if(sala[numeroAleatorio].down != null && 
				porta.downX+10 > point.x && porta.downX < point.x+1 &&
				porta.downY+2 > point.y && porta.downY < point.y+2){
					numeroAleatorio = sala[numeroAleatorio].clickDown;
					if(numeroAleatorio==0){
						 JOptionPane.showMessageDialog(null,"PARABENS, VOCE VENCEU O LABIRINTO!");
					}
			}
		}
	}
	//==============================DRAW====================================
	@Override
	protected void draw(Canvas canvas) {
		canvas.clear();
		
		if(sala[numeroAleatorio].north != null){
			porta.north().draw(canvas);
			inimigo.definePosicao(1);
			
			if(sala[numeroAleatorio].saberInimigo == 1){
				inimigo.goblin().draw(canvas);
			}
			else if(sala[numeroAleatorio].saberInimigo == 2){
				inimigo.orc().draw(canvas);
			}
			else if(sala[numeroAleatorio].saberInimigo == 3){
				inimigo.troll().draw(canvas);
			}
		}
		if(sala[numeroAleatorio].south != null){
			porta.south().draw(canvas);
			inimigo.definePosicao(2);
		}
		if(sala[numeroAleatorio].east != null){
			porta.east().draw(canvas);
			inimigo.definePosicao(3);
		}
		if(sala[numeroAleatorio].west != null){
			porta.west().draw(canvas);
			inimigo.definePosicao(4);
		}
		if(sala[numeroAleatorio].up != null){
			porta.up().draw(canvas);
			inimigo.definePosicao(5);
		}
		if(sala[numeroAleatorio].down != null){
			porta.down().draw(canvas);
			inimigo.definePosicao(6);
		}
		
		personagem.criandoGuerreiro().draw(canvas);
	}
	
	//===============================LOOP====================================
	@Override
	protected void loop() {
		redraw();
	}
	
	//===============================SETUP====================================
	
	@Override
	protected void setup(){
		lendoArquivo();
		porta = new Porta();
		personagem = new Personagem();
		inimigo = new Inimigo();
		
		// ajusta o numero maximo de vezes por segundo que "loop()" sera executado
		setFramesPerSecond(60);
		// ajusta a resolucao
		setResolution(Resolution.LOWRES);
		
		addMouseObserver(MouseEvent.CLICK, this);
		
	}
	
	//=========================DEFININDO SALAS=================================
	//Leitura do arquivo texto e definicao de salas	
		@SuppressWarnings("resource")
		public void lendoArquivo(){			
			String linha[] = new String[31];
			FileReader texto = null;
			Scanner ler = null;
			int i = 0;
			String clickSala;
			
			try{
				texto = new FileReader("coordenadas.txt");
				ler = new Scanner(texto).useDelimiter("\n");
			}catch (FileNotFoundException e){
				Console.print("");
			}
			
			sala[0] = new Sala (null, 0, null, 0, null, 0, null, 0, null, 0, null, 0, 0);

			while (ler.hasNext()) {
				String north = null, south = null, east = null, west = null, up = null, down = null ;
				int room = 0, clickNorth = 0, clickSouth = 0, clickEast = 0, clickWest = 0, clickUp = 0, clickDown = 0, saberInimigo = 0;
				linha[i] = ler.next();
				
				if(linha[i].contains("room")){
					clickSala = linha[i].substring(linha[i].indexOf("room")+5, linha[i].indexOf("room")+7);
					room = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("north")){
					north = "north";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("north")+6, linha[i].indexOf("north")+8);
					clickNorth = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("south")){
					south = "south";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("south")+6, linha[i].indexOf("south")+8);
					clickSouth = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("east")){
					east = "east";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("east")+5, linha[i].indexOf("east")+7);
					clickEast = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("west")){
					west = "west";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("west")+5, linha[i].indexOf("west")+7);
					clickWest = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("up")){
					up = "up";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("up")+3, linha[i].indexOf("up")+6);
					clickUp = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				if(linha[i].contains("down")){
					down = "down";
					saberInimigo = gerador.nextInt(6);
					clickSala = linha[i].substring(linha[i].indexOf("down")+5, linha[i].indexOf("down")+7);
					clickDown = Integer.parseInt(clickSala.replaceAll("[^0-9]*", ""));
				}
				
				
				if(north != null || south != null || east != null || west != null || up != null || down != null){
					saberInimigo = gerador.nextInt(6);
				}
	
			sala[room] = new Sala (north, clickNorth, south, clickSouth, east, clickEast, west, clickWest, up, clickUp, down, clickDown, saberInimigo);
			i++;
		}
	}
}

